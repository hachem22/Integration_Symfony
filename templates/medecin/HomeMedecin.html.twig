{% extends 'medecin/baseMedecin.html.twig' %}

{% block title %}CareConnect - Tableau de Bord Médecin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        :root {
            --primary-blue: #0D47A1;     /* Deep Blue */
            --secondary-blue: #1565C0;   /* Strong Blue */
            --accent-blue: #2196F3;      /* Bright Blue */
            --light-blue: #64B5F6;       /* Light Blue */
            --background-blue: #E3F2FD;  /* Very Light Blue */
        }

        body {
            background-color: var(--background-blue);
            font-family: 'Inter', sans-serif;
        }

        .dashboard-container {
            padding: 2rem;
            max-width: 1450px;
            margin: 0 auto;
        }

        .card-medical {
            border-radius: 15px;
            box-shadow: 0 10px 20px rgba(13, 71, 161, 0.1);
            border: none;
            margin-bottom: 1.5rem;
            transition: all 0.3s ease;
        }

        .card-medical:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(13, 71, 161, 0.15);
        }

        .card-medical .card-header {
            background-color: var(--primary-blue);
            color: white;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            padding: 1rem;
        }

        .kpi-card {
            position: relative;
            overflow: hidden;
            color: white;
            height: 220px;
            background: linear-gradient(145deg, var(--secondary-blue), var(--accent-blue));
        }

        .kpi-card.today-appointments {
            background: linear-gradient(145deg, #0D47A1, #1565C0);
        }

        .kpi-card.patient-stats {
            background: linear-gradient(145deg, #1565C0, #2196F3);
        }

        .kpi-card.consultation-stats {
            background: linear-gradient(145deg, #2196F3, #64B5F6);
        }

        .kpi-card.emergency-stats {
            background: linear-gradient(145deg, #64B5F6, #90CAF9);
        }

        .kpi-card .icon {
            position: absolute;
            right: -20px;
            top: -20px;
            font-size: 6rem;
            opacity: 0.2;
            color: rgba(255,255,255,0.3);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: white;
        }

        .chart-container {
            position: relative;
            height: 450px;
        }

        .notification-item {
            transition: all 0.3s ease;
            border-left: 4px solid transparent;
        }

        .notification-item:hover {
            background-color: rgba(13, 71, 161, 0.05);
            border-left-color: var(--primary-blue);
        }
    </style>
{% endblock %}

{% block content %}
<div class="container-fluid dashboard-container">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card card-medical bg-gradient-primary text-white">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="display-6">
                            <i class="fas fa-clinic-medical me-3"></i>Bonjour Dr. {{ app.user.nom ?? 'Médecin' }}  {{ app.user.prenom ?? 'Médecin' }}
                        </h1>
                        <p class="lead mb-0">Votre vue d'ensemble professionnelle aujourd'hui</p>
                    </div>
                    <div class="quick-actions">
                        <a href="{{ path('gere_rendezvous') }}" class="btn btn-light me-2">
                            <i class="fas fa-calendar-check me-2"></i>Rendez-vous
                        </a>
                        <a href="#" class="btn btn-outline-light">
                            <i class="fas fa-user-plus me-2"></i>Nouveau Patient
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- KPI Cards -->
        <div class="col-md-3">
            <div class="card card-medical kpi-card today-appointments">
                <div class="card-body">
                    <div class="icon"><i class="fas fa-calendar-alt"></i></div>
                    <h5 class="text-white-50 mb-3">Rendez-vous Aujourd'hui</h5>
                    <div class="stat-number">{{ rendezVousAujourdhui|default(0) }}</div>
                    <small class="text-white-50">Prochain: {{ prochainRdvTemps|default('Aucun') }}</small>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card card-medical kpi-card patient-stats">
                <div class="card-body">
                    <div class="icon"><i class="fas fa-users"></i></div>
                    <h5 class="text-white-50 mb-3">Total Patients</h5>
                    <div class="stat-number">{{ totalPatients|default(0) }}</div>
                    <small class="text-white-50">+{{ nouveauxPatients|default(0) }} cette semaine</small>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card card-medical kpi-card consultation-stats">
                <div class="card-body">
                    <div class="icon"><i class="fas fa-stethoscope"></i></div>
                    <h5 class="text-white-50 mb-3">Consultations</h5>
                    <div class="stat-number">{{ statsConsultations|default(0) }}</div>
                    <small class="text-white-50">Générales: {{ statsConsultationsDetails['Consultation générale']|default(0) }}</small>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card card-medical kpi-card emergency-stats">
                <div class="card-body">
                    <div class="icon"><i class="fas fa-briefcase-medical"></i></div>
                    <h5 class="text-white-50 mb-3">Urgences</h5>
                    <div class="stat-number">{{ statsConsultationsDetails['Urgence']|default(0) }}</div>
                    <small class="text-white-50">Ce mois-ci</small>
                </div>
            </div>
        </div>
    </div>
<div class="row mt-4">
    <div class="col-md-12">
        <div class="card card-medical">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-chart-pie text-primary me-2"></i>Statut des Rendez-vous
                </h5>
            </div>
            <div class="card-body">
                <div class="chart-container">
                    <canvas id="rendezVousStatusChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row mt-4">
    <div class="col-md-8">
        <div class="card card-medical">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-pie text-primary me-2"></i>Distribution des Consultations
                    </h5>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="consultationChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
      


        <div class="col-md-4">
            <div class="card card-medical h-100">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-bell text-warning me-2"></i>Notifications Récentes
                    </h5>
                </div>
                <ul class="list-group list-group-flush">
                    {% for notification in notifications|slice(0, 4) %}
                        <li class="list-group-item notification-item d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">{{ notification.title }}</h6>
                                <small class="text-muted">{{ notification.description }}</small>
                            </div>
                            <span class="badge bg-primary rounded-pill">{{ notification.type }}</span>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
        </div> <!-- This closes the col-md-4 for actual notifications -->
    </div> <!-- This closes the row started at line 190 (original) -->

    <!-- New Row for Medicaments Catalogue -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card card-medical">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-pills text-primary me-2"></i>Catalogue des Médicaments
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row" id="productGrid">
                        {% for medicament in medicaments %}
                        <div class="col-md-4 col-lg-3 mb-4 product-card"
                             data-type="{{ medicament.type }}"
                             data-status="{{ medicament.statu ? 'en-stock' : 'rupture' }}"
                             data-price="{{ medicament.prix }}">
                            <div class="card h-100">
                                <div class="position-relative">
                                    {% if medicament.image %}
                                        <img src="{{ asset('uploads/images/' ~ medicament.image) }}"
                                             class="card-img-top"
                                             alt="{{ medicament.nom }}"
                                             style="height: 200px; object-fit: cover;">
                                    {% endif %}
                                    <div class="position-absolute top-0 end-0 m-2">
                                        <span class="badge bg-{{ medicament.statu ? 'success' : 'danger' }}">
                                            {{ medicament.statu ? 'En stock' : 'Rupture' }}
                                        </span>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title mb-1">{{ medicament.nom }}</h5>
                                    <p class="text-muted small mb-2">{{ medicament.type }}</p>
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <span class="fw-bold text-primary">{{ medicament.prix|number_format(2, ',', ' ') }} €</span>
                                        <span class="text-muted small">Stock: {{ medicament.quantite }}</span>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a href="{{ path('app_stock_pharmacie_show', {'id': medicament.id}) }}"
                                           class="btn btn-outline-primary btn-sm">
                                            <i class="bx bx-info-circle me-1"></i> Détails
                                        </a>
                                        {% if medicament.statu %}
                                            <form action="{{ path('app_panier_ajouter', {'id': medicament.id}) }}" method="POST" class="d-inline">
                                                <button type="submit" class="btn btn-primary btn-sm">
                                                    <i class="bx bx-cart-add me-1"></i> Ajouter au panier
                                                </button>
                                            </form>
                                        {% else %}
                                            <button class="btn btn-secondary btn-sm" disabled>
                                                <i class="bx bx-x-circle me-1"></i> Indisponible
                                            </button>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                        </div>
                        {% else %}
                        <div class="col-12">
                            <div class="alert alert-info" role="alert">
                                <i class="bx bx-info-circle me-2"></i>
                                Aucun médicament disponible dans le catalogue.
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const ctx = document.getElementById('consultationChart').getContext('2d');
            
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Consultation Générale', 'Urgence', 'Suivi Traitement', 'Autre'],
                    datasets: [{
                        data: [
                            {{ statsConsultationsDetails['Consultation générale']|default(0) }}, 
                            {{ statsConsultationsDetails['Urgence']|default(0) }}, 
                            {{ statsConsultationsDetails['Suivi traitement']|default(0) }},
                            {{ statsConsultationsDetails['Autre']|default(0) }}
                        ],
                        backgroundColor: [
                            'rgba(13, 71, 161, 0.8)',    // Deep Blue
                            'rgba(21, 101, 192, 0.8)',   // Strong Blue
                            'rgba(33, 150, 243, 0.8)',   // Bright Blue
                            'rgba(100, 181, 246, 0.8)'   // Light Blue
                        ],
                        borderColor: [
                            'rgba(13, 71, 161, 1)',
                            'rgba(21, 101, 192, 1)',
                            'rgba(33, 150, 243, 1)',
                            'rgba(100, 181, 246, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Distribution des Consultations',
                            font: {
                                size: 16
                            }
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        });
         document.addEventListener("DOMContentLoaded", function() {
            // On récupère les données des statuts depuis le contrôleur
            const statusData = {
                {% for status, count in rendezVousStatusStats %}
                    "{{ status }}": {{ count }},
                {% endfor %}
            };
            
            // On prépare les labels et les données
            const labels = Object.keys(statusData);
            const data = Object.values(statusData);
            
            // On définit les couleurs en fonction des statuts
            const colorMap = {
                'EN_ATTENTE': ['rgba(255, 193, 7, 0.8)', 'rgba(255, 193, 7, 1)'], // Jaune pour En Attente
                'CONFIRME': ['rgba(40, 167, 69, 0.8)', 'rgba(40, 167, 69, 1)'], // Vert pour Confirmé/Accepté
                'REJETE': ['rgba(220, 53, 69, 0.8)', 'rgba(220, 53, 69, 1)'],   // Rouge pour Rejeté/Annulé
                'Terminé': ['rgba(108, 117, 125, 0.8)', 'rgba(108, 117, 125, 1)'], // Gris pour Terminé
                // Gardez 'default' pour les statuts non mappés explicitement
                'default': ['rgba(0, 123, 255, 0.8)', 'rgba(0, 123, 255, 1)'] // Couleur par défaut
            };
            
            // Préparer les tableaux de couleurs
            const backgroundColors = [];
            const borderColors = [];
            
            labels.forEach(label => {
                const colors = colorMap[label] || colorMap['default'];
                backgroundColors.push(colors[0]);
                borderColors.push(colors[1]);
            });
            
            const ctx = document.getElementById('rendezVousStatusChart').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: backgroundColors,
                        borderColor: borderColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Statut des Rendez-vous',
                            font: {
                                size: 16
                            }
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const filterType = document.getElementById('filterType');
    const filterStatus = document.getElementById('filterStatus');
    const filterPrice = document.getElementById('filterPrice');
    const productCards = document.querySelectorAll('.product-card');

    function filterProducts() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedType = filterType.value.toLowerCase();
        const selectedStatus = filterStatus.value;
        const selectedPrice = filterPrice.value;

        // Convertir les cartes en tableau pour le tri
        let cards = Array.from(productCards);

        // Trier par prix si nécessaire
        if (selectedPrice) {
            cards.sort((a, b) => {
                const priceA = parseFloat(a.dataset.price);
                const priceB = parseFloat(b.dataset.price);
                return selectedPrice === 'asc' ? priceA - priceB : priceB - priceA;
            });
        }

        cards.forEach(card => {
            const type = card.dataset.type.toLowerCase();
            const status = card.dataset.status;
            const title = card.querySelector('.card-title').textContent.toLowerCase();

            const matchesSearch = title.includes(searchTerm);
            const matchesType = !selectedType || type === selectedType;
            const matchesStatus = !selectedStatus || status === selectedStatus;

            if (matchesSearch && matchesType && matchesStatus) {
                card.style.display = '';
            } else {
                card.style.display = 'none';
            }
        });

        // Réorganiser les cartes dans la grille
        const productGrid = document.getElementById('productGrid');
        cards.forEach(card => productGrid.appendChild(card));
    }

    searchInput.addEventListener('input', filterProducts);
    filterType.addEventListener('change', filterProducts);
    filterStatus.addEventListener('change', filterProducts);
    filterPrice.addEventListener('change', filterProducts);
});
    </script>
{% endblock %}
