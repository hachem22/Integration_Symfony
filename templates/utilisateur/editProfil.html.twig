{# templates/utilisateur/editProfil.html.twig #}
{% extends "utilisateur/sidenav.html.twig" %}
{% block stylesheets %}
    <!-- Core CSS -->
    <link rel="stylesheet" href="{{ asset('assets/vendor/css/core.css') }}" class="template-customizer-core-css" />
    <link rel="stylesheet" href="{{ asset('assets/vendor/css/theme-default.css') }}" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="{{ asset('assets/css/demo.css') }}" />
    <!-- Vendors CSS -->
    <link rel="stylesheet" href="{{ asset('assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css') }}" />
{% endblock %}
{% block body %}
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar" style="margin-top: 600px; width: 2000px;margin-left: -350px;heigth: 1000px;">
        <div class="layout-container">
            <!-- Layout container -->
            <div class="layout-page">
                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <!-- Content -->
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card mb-6">
                                    <!-- Account -->
                                    <div class="card-body">
                                        <div class="d-flex align-items-start align-items-sm-center gap-6 pb-4 border-bottom">
                                            <img src="{{ asset('uploads/images/' ~ user.image) }}" alt="user-avatar" class="rounded-circle" width="100" height="100" />
                                        </div>
                                    </div>
                                    <div class="card-body pt-4">
                                        {{ form_start(form, {'attr': {'id': 'formAccountSettings', 'method': 'POST', 'action': path('app_utilisateur_edit_profil', {'id': user.id}) }}
                                        ) }}
                                        <div class="row g-6">
                                            <div class="col-md-6">
                                                <label for="firstName" class="form-label">
                                                    First Name
                                                </label>
                                                {{ form_widget(form.Nom, {'attr': {'class': 'form-control', 'id': 'firstName' }}
                                                ) }}
                                            </div>
                                            <div class="col-md-6">
                                                <label for="lastName" class="form-label">
                                                    Last Name
                                                </label>
                                                {{ form_widget(form.Prenom, {'attr': {'class': 'form-control', 'id': 'lastName' }}
                                                ) }}
                                            </div>
                                            <div class="col-md-6">
                                                <label for="email" class="form-label">
                                                    E-mail
                                                </label>
                                                {{ form_widget(form.Email, {'attr': {'class': 'form-control', 'id': 'email' }}
                                                ) }}
                                            </div>
                                            <div class="col-md-6">
                                                <label class="form-label" for="phoneNumber">
                                                    Phone Number
                                                </label>
                                                <div class="input-group input-group-merge">
                                                    <span class="input-group-text">
                                                        TUN (+216)
                                                    </span>
                                                    {{ form_widget(form.Tel, {'attr': {'class': 'form-control', 'id': 'phoneNumber' }}
                                                    ) }}
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label for="address" class="form-label">
                                                    Address
                                                </label>
                                                {{ form_widget(form.Adress, {'attr': {'class': 'form-control', 'id': 'address' }}
                                                ) }}
                                            </div>
                                            <div class="col-md-6">
                                                <label for="image" class="form-label">
                                                    Image
                                                </label>
                                                {{ form_widget(form.image, {'attr': {'class': 'form-control', 'id': 'image' }}
                                                ) }}
                                            </div>
                                            <div class="mt-6">
                                                <button type="submit" class="btn btn-primary me-3">
                                                    Save changes
                                                </button>
                                                <button type="reset" class="btn btn-outline-secondary">
                                                    Cancel
                                                </button>
                                                <button type="button" id="start-voice-command" class="btn btn-success">
                                                    Start Voice Command
                                                </button>
                                            </div>
                                        </div>
                                        {{ form_end(form) }}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <!-- Core JS -->
    <script src="{{ asset('assets/vendor/libs/jquery/jquery.js') }}"></script>
    <script src="{{ asset('assets/vendor/libs/popper/popper.js') }}"></script>
    <script src="{{ asset('assets/vendor/js/bootstrap.js') }}"></script>
    <script src="{{ asset('assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js') }}"></script>
    <script src="{{ asset('assets/vendor/js/menu.js') }}"></script>
    <!-- Main JS -->
    <script src="{{ asset('assets/js/main.js') }}"></script>
    <!-- Page JS -->
    <script src="{{ asset('assets/js/pages-account-settings-account.js') }}"></script>
    <!-- Voice Command JS -->
    <script>document.addEventListener('DOMContentLoaded', () => {
        console.log("âœ… Voice command script loaded!");  // <-- Add this

        const startButton = document.getElementById('start-voice-command');
    
        if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            const recognition = new SpeechRecognition();
    
            recognition.continuous = false;
            recognition.interimResults = false;
            recognition.lang = 'en-US';
    
            startButton.addEventListener('click', () => {
                recognition.start();
            });
    
            recognition.onresult = (event) => {
                const transcript = event.results[0][0].transcript;
                console.log('You said:', transcript);
                updateProfile(transcript);
            };
    
            recognition.onerror = (event) => {
                console.error('Speech recognition error:', event.error);
            };
        } else {
            console.error('Web Speech API is not supported in this browser.');
            startButton.disabled = true;
        }
    
        function updateProfile(voiceCommand) {
            fetch('/api/voice/update-profile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ command: voiceCommand }),
            })
            .then(response => response.json())
            .then(data => {
                console.log('Profile updated:', data);
                speakFeedback(data.message);
            })
            .catch(error => {
                console.error('Error updating profile:', error);
                speakFeedback('Error updating profile');
            });
        }
    
        function speakFeedback(message) {
            const utterance = new SpeechSynthesisUtterance(message);
            window.speechSynthesis.speak(utterance);
        }
    });</script>
{% endblock %}