<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Chatbot Hospitalier</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-gray-100">
    <div class="container mx-auto px-4 py-8 max-w-2xl">
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <div class="bg-blue-600 text-white p-4 flex justify-between items-center">
                <h2 class="text-xl font-bold">Chatbot Hospitalier</h2>
                <div class="flex space-x-2">
                    <button onclick="changerLangue('fr')" class="langue-btn hover:bg-blue-700 px-2 py-1 rounded" data-langue="fr">
                        <i class="fas fa-language"></i> FR
                    </button>
                    <button onclick="changerLangue('en')" class="langue-btn hover:bg-blue-700 px-2 py-1 rounded" data-langue="en">
                        <i class="fas fa-language"></i> EN
                    </button>
                </div>
            </div>

            <div id="messages" class="p-4 h-96 overflow-y-auto space-y-4">
                <div class="message bot flex">
                    <div class="bg-blue-100 text-blue-800 p-3 rounded-lg max-w-full">
                        Bonjour! Je suis votre assistant de gestion hospitalière. Comment puis-je vous aider aujourd'hui ?
                    </div>
                </div>
            </div>

            <div class="p-4 border-t">
                <div class="flex space-x-2">
                    <select id="type-requete" class="border rounded p-2 w-1/3">
                        <option value="DISPONIBILITE_CHAMBRE">Disponibilité Chambre</option>
                        <option value="DISPONIBILITE_LIT">Disponibilité Lit</option>
                        <option value="HISTORIQUE_MAINTENANCE">Historique Maintenance</option>
                    </select>
                    <input 
                        type="text" 
                        id="input-message" 
                        placeholder="Posez votre question..." 
                        class="flex-grow border rounded p-2"
                    >
                    <button 
                        onclick="envoyerMessage()" 
                        class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
                    >
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let langueActuelle = 'fr';

        function changerLangue(langue) {
            langueActuelle = langue;
            document.querySelectorAll('.langue-btn').forEach(btn => {
                btn.classList.remove('bg-blue-500');
            });
            if (event && event.currentTarget) {
                event.currentTarget.classList.add('bg-blue-500');
            }
        }

        function ajouterMessage(message, type = 'bot') {
            console.log('ajouterMessage called with:', { message, type });

            const messagesContainer = document.getElementById('messages');
            const messageDiv = document.createElement('div');
            
            // Simplified class addition with explicit checks
            const baseClasses = ['message', type, 'flex'];
            if (type === 'user') {
                baseClasses.push('justify-end');
            }
            
            baseClasses.forEach(cls => {
                try {
                    if (cls) messageDiv.classList.add(cls);
                } catch (e) {
                    console.error('Error adding class:', cls, e);
                }
            });
            
            const messageContent = document.createElement('div');
            
            // Base classes for message content
            const contentClasses = ['p-3', 'rounded-lg', 'max-w-full'];
            contentClasses.forEach(cls => {
                try {
                    if (cls) messageContent.classList.add(cls);
                } catch (e) {
                    console.error('Error adding content class:', cls, e);
                }
            });

            // Conditional styling classes
            const stylingClasses = 
                type === 'user' ? ['bg-green-100', 'text-green-800'] :
                type === 'error' ? ['bg-red-100', 'text-red-800'] :
                type === 'bot' ? ['bg-blue-100', 'text-blue-800'] : [];
            
            stylingClasses.forEach(cls => {
                try {
                    if (cls) messageContent.classList.add(cls);
                } catch (e) {
                    console.error('Error adding styling class:', cls, e);
                }
            });

            messageContent.textContent = message;
            
            messageDiv.appendChild(messageContent);
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        function envoyerMessage() {
            const inputMessage = document.getElementById('input-message');
            const typeRequete = document.getElementById('type-requete');
            const message = inputMessage.value.trim();

            if (!message) {
                ajouterMessage('Veuillez entrer une question.', 'error');
                return;
            }

            ajouterMessage(message, 'user');
            inputMessage.value = '';

            fetch('/chatbot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    requete: message,
                    langue: langueActuelle,
                    typeRequete: typeRequete.value
                })
            })
            .then(response => {
                console.log('Fetch response:', response);
                if (!response.ok) {
                    throw new Error('Erreur réseau');
                }
                return response.json();
            })
            .then(data => {
                console.log('Received data:', data);
                if (!data || !data.message) {
                    throw new Error('Réponse invalide du serveur');
                }

                let messageReponse = data.message || 'Aucune réponse du serveur';

                if (data.chambres && data.chambres.length > 0) {
                    messageReponse += "\n\nChambres disponibles :";
                    data.chambres.forEach(chambre => {
                        messageReponse += `\n- Chambre ${chambre.numero} (${chambre.type}, ${chambre.capacite} places)`;
                    });
                } else if (data.chambres) {
                    messageReponse += "\n\nAucune chambre disponible.";
                }

                if (data.lits && data.lits.length > 0) {
                    messageReponse += "\n\nLits disponibles :";
                    data.lits.forEach(lit => {
                        messageReponse += `\n- Lit ${lit.numero} (Chambre ${lit.chambre})`;
                    });
                } else if (data.lits) {
                    messageReponse += "\n\nAucun lit disponible.";
                }

                ajouterMessage(messageReponse);
            })
            .catch(error => {
                console.error('Erreur complète:', error);
                ajouterMessage('Désolé, une erreur est survenue. Veuillez réessayer. ' + error.message, 'error');
            });
        }

        // Gestion de l'envoi par touche Entrée
        document.getElementById('input-message').addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                envoyerMessage();
            }
        });
    </script>
</body>
</html>